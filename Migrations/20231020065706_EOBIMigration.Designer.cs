// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using itgsgroup.Areas.Identity.Data;

#nullable disable

namespace itgsgroup.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231020065706_EOBIMigration")]
    partial class EOBIMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("itgsgroup.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("cnic_expiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("cnic_issue")
                        .HasColumnType("datetime2");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("curr_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("departId")
                        .HasColumnType("int");

                    b.Property<int?>("designationId")
                        .HasColumnType("int");

                    b.Property<string>("emergency_contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("empid")
                        .HasColumnType("int");

                    b.Property<string>("f_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("joining_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("machineId")
                        .HasColumnType("int");

                    b.Property<string>("marital_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permanent_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("resignation_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("salary")
                        .HasColumnType("int");

                    b.Property<int?>("shiftId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("companyId");

                    b.HasIndex("departId");

                    b.HasIndex("designationId");

                    b.HasIndex("shiftId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.COATModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("correct_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("hrstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("Correct_AttendTime");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.CompanyHolidayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("companyHolidays");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LocId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ntn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stax")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocId");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DeductionCountViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Absent")
                        .HasColumnType("int");

                    b.Property<int>("DiciplinaryAction")
                        .HasColumnType("int");

                    b.Property<int>("Late")
                        .HasColumnType("int");

                    b.Property<int>("TotalDeduction")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("empId");

                    b.ToTable((string)null);

                    b.ToView("DeductionCountView", (string)null);
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DesignationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("designations");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DiciplinaryActionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("diciplinaryActions");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EOBIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("EOBIs");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EmpDocModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("filepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("empDocs");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EmpFamilyDocModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("filepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("empFamilyDocs");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EmpFamilyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("cnic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("cnic_expiry")
                        .HasColumnType("datetime2");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("relation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("empFamily");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.FascalYearModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("from")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("to")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("fascalYears");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.GazettedHolidayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("gazettedHolidays");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LeaveApplyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<int>("days")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("from")
                        .HasColumnType("datetime2");

                    b.Property<string>("hrstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("leaveId")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("to")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.HasIndex("leaveId");

                    b.ToTable("leaveApplies");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LeaveCountViewModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("col1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("empId");

                    b.ToTable((string)null);

                    b.ToView("LeaveCountView", (string)null);
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LeaveTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<int>("days")
                        .HasColumnType("int");

                    b.Property<int>("fyId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("fyId");

                    b.ToTable("leaveTypes");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LoanApplyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("hrstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("loanamount")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("repaymentamount")
                        .HasColumnType("int");

                    b.Property<DateTime>("startdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("loanApplies");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LoanOpeningModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("opening")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("empId");

                    b.ToTable("loanOpenings");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LoanViewModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("narration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pay")
                        .HasColumnType("int");

                    b.Property<int?>("received")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("empId");

                    b.ToTable((string)null);

                    b.ToView("LoanView", (string)null);
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LocationsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.ReconciliationViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyHolidaysCount")
                        .HasColumnType("int");

                    b.Property<int>("GazettedHolidaysCount")
                        .HasColumnType("int");

                    b.Property<int>("PresentDays")
                        .HasColumnType("int");

                    b.Property<int>("Saturdays")
                        .HasColumnType("int");

                    b.Property<int>("Sundays")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalWorkingDays")
                        .HasColumnType("int");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("empId");

                    b.ToTable((string)null);

                    b.ToView("ReconciliationView", (string)null);
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.SalaryBreakupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("salaryBreakup");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.SandwichAttModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("from")
                        .HasColumnType("datetime2");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("to")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("empId");

                    b.ToTable("sandwichAtts");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.ShiftModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("from")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("to")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.ToTable("shift");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.SlabsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<int>("extra")
                        .HasColumnType("int");

                    b.Property<int>("from")
                        .HasColumnType("int");

                    b.Property<int>("fyId")
                        .HasColumnType("int");

                    b.Property<float>("percent")
                        .HasColumnType("real");

                    b.Property<int>("to")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("fyId");

                    b.ToTable("slabs");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.rawattendanceModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AttState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("att_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("empId");

                    b.ToTable("rawattendances");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.tempMonthAttModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Checkin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Checkout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("R_Checkin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("absent")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("actualhour")
                        .HasColumnType("time");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("diciplinaryaction")
                        .HasColumnType("bit");

                    b.Property<bool>("earlygoing")
                        .HasColumnType("bit");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("halfday")
                        .HasColumnType("bit");

                    b.Property<string>("holiday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("late")
                        .HasColumnType("bit");

                    b.Property<string>("leave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("present")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable("tempMonthAtts");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.tempMonthAttViewModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Checkin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Checkout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("R_Checkin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("absent")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("actualhour")
                        .HasColumnType("time");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("diciplinaryaction")
                        .HasColumnType("bit");

                    b.Property<bool>("earlygoing")
                        .HasColumnType("bit");

                    b.Property<string>("empId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("halfday")
                        .HasColumnType("bit");

                    b.Property<string>("holiday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("late")
                        .HasColumnType("bit");

                    b.Property<string>("leave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("present")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("companyId");

                    b.HasIndex("empId");

                    b.ToTable((string)null);

                    b.ToView("TempMonthAttView", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("itgsgroup.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("itgsgroup.Models.hrms.DepartmentModel", "depart")
                        .WithMany()
                        .HasForeignKey("departId");

                    b.HasOne("itgsgroup.Models.hrms.DesignationModel", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("itgsgroup.Models.hrms.ShiftModel", "shift")
                        .WithMany()
                        .HasForeignKey("shiftId");

                    b.Navigation("company");

                    b.Navigation("depart");

                    b.Navigation("designation");

                    b.Navigation("shift");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.COATModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.CompanyHolidayModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.CompanyModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.LocationsModel", "Loc")
                        .WithMany()
                        .HasForeignKey("LocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loc");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DeductionCountViewModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DepartmentModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DesignationModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.DiciplinaryActionModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EOBIModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EmpDocModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany("empDocs")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EmpFamilyDocModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.EmpFamilyModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.FascalYearModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.GazettedHolidayModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LeaveApplyModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Models.hrms.LeaveTypeModel", "leave")
                        .WithMany()
                        .HasForeignKey("leaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");

                    b.Navigation("leave");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LeaveCountViewModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LeaveTypeModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Models.hrms.FascalYearModel", "fy")
                        .WithMany()
                        .HasForeignKey("fyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("fy");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LoanApplyModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LoanOpeningModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.LoanViewModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.ReconciliationViewModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.SalaryBreakupModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.SandwichAttModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.ShiftModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.SlabsModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Models.hrms.FascalYearModel", "fy")
                        .WithMany()
                        .HasForeignKey("fyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("fy");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.rawattendanceModel", b =>
                {
                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.tempMonthAttModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Models.hrms.tempMonthAttViewModel", b =>
                {
                    b.HasOne("itgsgroup.Models.hrms.CompanyModel", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itgsgroup.Areas.Identity.Data.ApplicationUser", "emp")
                        .WithMany()
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("itgsgroup.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Navigation("empDocs");
                });
#pragma warning restore 612, 618
        }
    }
}
